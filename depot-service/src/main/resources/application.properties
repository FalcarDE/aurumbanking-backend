# General Application Properties
quarkus.application.name=depot-service

# REST Path Config
%prod.quarkus.http.root-path=/depot-service
%dev.quarkus.http.root-path=/
%test.quarkus.http.root-path=/
# Production Path for Metrics Endpoint
%prod.quarkus.micrometer.export.prometheus.path=/metrics

# Production Database Config (should match the settings in docker-compose.yml)
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = admin
%prod.quarkus.datasource.password = password
%prod.quarkus.datasource.reactive.url = vertx-reactive:postgresql://depot-service-db:5432/database
# drop and create the database at startup (use `update` to only update the schema)
%prod.quarkus.hibernate-orm.database.generation = drop-and-create

#localhost::dev
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=admin
quarkus.datasource.password=password
quarkus.datasource.reactive.url = vertx-reactive:postgresql://localhost:5433/database
## drop and create the database at startup (use `update` to only update the schema)
# quarkus.hibernate-orm.database.generation = drop-and-create


# Container Properties
quarkus.container-image.image=cc-aurumbanking/depot-service:1.0.0
quarkus.docker.dockerfile-native-path=src/main/docker/Dockerfile.native-micro

# Run modern version of gRPC Server
quarkus.grpc.server.use-separate-server=false

# OpenTracing/Jaeger Config
quarkus.otel.exporter.otlp.traces.timeout=30S

# Swagger UI for OpenAPI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.theme=original

# Test Configs
quarkus.jacoco.reuse-data-file=true

# Receive from Kafka
mp.messaging.incoming.update-depot-value-topic.connector=smallrye-kafka
mp.messaging.incoming.update-depot-value-topic.value.deserializer=de.fhe.cc.team4.aurumbanking.messaging.KafkaTransactionDeserializer
mp.messaging.incoming.update-depot-value-topic.auto.offset.reset=earliest
mp.messaging.incoming.update-depot-value-topic.health-readiness-enabled=false
